<a href="https://martinfowler.com/bliki/CQRS.html">Command and Query Responsibility Segregation</a> (CQRS) is an architecture pattern based on the Command and Query Separation (CQS) principle that states that methods should either be commands that perform an action, or queries that return data. CQRS is basically an extension of this principle where it's applied throughout the architecture of the application, usually by creating different objects for queries and for commands.

By separating our application into commands and queries we make it possible to optimize both without influencing each other. For instance, in most systems a large portion of the transactions (both in actual number of transactions as in data being transferred) are queries. Because they are separated it becomes possible to scale the queries while leaving the commands-side relatively small (thus reducing cost).
With <a href="https://martinfowler.com/articles/201701-event-driven.html">event-driven architecture</a> events are used to trigger and communicate between decoupled Microservices. An event is any change in a state like customer data being updated or other external triggers. There are three key components in event-driven architecture, namely event producers, event routers/mediators, and event consumers. The architecture is decoupled or loosely coupled because producers don't know which consumers are listening for an event, and what the consequences are of its occurrence. The Azure platform itself can be used as an event producer, for example Cosmos DB change events or scaling events from App service plans.

Kafka or Dapr are good solutions to use in applications based on an event-driven architecture. But also basic messaging systems like <i>RabbitMQ</i>, <i>Service Bus</i> or <i>Azure Event Grid</i> will suffice but may require more "low-level" programming.